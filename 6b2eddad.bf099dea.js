(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{171:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return r})),a.d(n,"rightToc",(function(){return i})),a.d(n,"default",(function(){return c}));a(51),a(24),a(19),a(20),a(52),a(0);var o=a(221);function t(){return(t=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var a=arguments[n];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e}).apply(this,arguments)}var r={id:"eris-3",title:"CommandClient",sidebar_label:"CommandClient"},i=[{value:"Definiendo un comando",id:"definiendo-un-comando",children:[]},{value:"Utilizando argumentos",id:"utilizando-argumentos",children:[]},{value:"Comando help",id:"comando-help",children:[]},{value:"Sub comandos",id:"sub-comandos",children:[]}],s={rightToc:i},l="wrapper";function c(e){var n=e.components,a=function(e,n){if(null==e)return{};var a,o,t={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,["components"]);return Object(o.b)(l,t({},s,a,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Eris posee una clase muy pr\xe1ctica llamada ",Object(o.b)("inlineCode",{parentName:"p"},"CommandClient"),", la cual es muy \xfatil ya que nos permite moldear nuestros comandos de una forma r\xe1pida y efic\xe1z. Tambi\xe9n nos ahorramos el escribir l\xedneas de c\xf3digo para utilidades como el cooldown, aliases, etc."),Object(o.b)("p",null,"Para utilizar esta clase debemos hacer unas modificaciones en la declaraci\xf3n de la clase ",Object(o.b)("inlineCode",{parentName:"p"},"Client"),"."),Object(o.b)("pre",null,Object(o.b)("code",t({parentName:"pre"},{className:"language-js"}),'const bot = new Eris.CommandClient("T\xda_TOKEN_AQU\xcd", {}, {\n  description: "Un bot escrito para Script Hub",\n  owner: "Lau",\n  prefix: ["!", ","]\n});\n')),Object(o.b)("p",null,"De esta forma estamos definiendo nuestra clase Client, pero con algunos par\xe1metros que act\xfaan como opciones. Estas tienen diversos usos, como definir un ",Object(o.b)("inlineCode",{parentName:"p"},"prefijo")," o en este caso dos de los mismos."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Para ver todas las opciones disponibles revisa ",Object(o.b)("a",t({parentName:"p"},{href:"https://abal.moe/Eris/docs/CommandClient"}),'"CommandClient"'))),Object(o.b)("h3",{id:"definiendo-un-comando"},"Definiendo un comando"),Object(o.b)("p",null,"Ya configuramos nuestro CommandClient con las opciones b\xe1sicas para nuestro bot, as\xed que ahora toca definir nuestro primer comando.\nPara ello utilizaremos el m\xe9todo ",Object(o.b)("inlineCode",{parentName:"p"},"registerCommand"),", proveniente de la clase ",Object(o.b)("inlineCode",{parentName:"p"},"CommandClient"),"."),Object(o.b)("pre",null,Object(o.b)("code",t({parentName:"pre"},{className:"language-js"}),'bot.registerCommand("ping", "Pong!", {\n  description: "Envia un mensaje diciendo Pong!",\n  fullDescription: "Este comando puede usarse cuando est\xe1s aburrido."\n});\n')),Object(o.b)("p",null,"En este ejemplo estamos registrando un comando llamado ",Object(o.b)("inlineCode",{parentName:"p"},"ping"),".\nEn el segundo par\xe1metro estamos especificando que retorne ",Object(o.b)("inlineCode",{parentName:"p"},"Pong!")," cuando el comando se ejecute.\nEn el tercer par\xe1metro definimos opciones, tal como en la clase ",Object(o.b)("inlineCode",{parentName:"p"},"CommandClient"),"."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Para ver todas las opciones disponibles revisa ",Object(o.b)("a",t({parentName:"p"},{href:"https://abal.moe/Eris/docs/CommandClient#function-registerCommand"}),'"registerCommand"'))),Object(o.b)("p",null,"Tambi\xe9n podr\xedamos enviar un mensaje al azar escribiendo el segundo par\xe1metro como ",Object(o.b)("inlineCode",{parentName:"p"},"array"),"."),Object(o.b)("pre",null,Object(o.b)("code",t({parentName:"pre"},{className:"language-js"}),'bot.registerCommand("ping", ["Pung!", "Pang!", "Pong!"], {\n  description: "Envia un mensaje al azar. Puede ser Pung!, Pang! o Pong!",\n  fullDescription: "Este comando puede usarse cuando est\xe1s aburrido."\n});\n')),Object(o.b)("h3",{id:"utilizando-argumentos"},"Utilizando argumentos"),Object(o.b)("p",null,"Hacer un comando simple es muy f\xe1cil, pero cuando se trata de comandos con argumentos... \xa1sigue siendo muy f\xe1cil!"),Object(o.b)("p",null,"Supongamos que queremos programar un comando en donde el usuario pueda contarnos un poco de su vida."),Object(o.b)("pre",null,Object(o.b)("code",t({parentName:"pre"},{className:"language-js"}),'var sobremi = bot.registerCommand("sobremi", (msg, args) => {\n    if (args.length === 0) return "Cu\xe9ntanos sobre tu vida!";\n    var miVida = args.join(" ");\n    return miVida;\n}, {\n    aliases: ["contarvida"],\n    description: "Envia un mensaje contandonos tu vida!",\n    fullDescription: "Este comando puede usarse cuando est\xe1s aburrido.",\n    cooldown: 10,\n    cooldownExclusions: { userIDs: ["595734746059898927"] },\n    cooldownMessage: "Este comando est\xe1 en cd.",\n    usage: "Peque\xf1o texto sobre tu vida",\n    invalidUsageMessage: "Uso inv\xe1lido"\n});\n')),Object(o.b)("p",null,"Su uso ser\xeda algo como esto: ",Object(o.b)("inlineCode",{parentName:"p"},"!sobremi Mi vida es muy divertida!"),". El bot enviar\xeda un mensaje con el contenido de la vida del usuario al canal en donde el comando fue utilizado. Si el usuario no nos cuenta nada, le diremos ",Object(o.b)("inlineCode",{parentName:"p"},"Cu\xe9ntanos sobre tu vida!"),"."),Object(o.b)("p",null,"En este ejemplo me decant\xe9 por utilizar ",Object(o.b)("inlineCode",{parentName:"p"},'join(" ")'),", que es el m\xe9todo encargado de unir todos los elementos del array ",Object(o.b)("inlineCode",{parentName:"p"},"args")," con espacios en blanco.\nAl ser ",Object(o.b)("inlineCode",{parentName:"p"},"args")," un array podr\xeda utilizar ",Object(o.b)("inlineCode",{parentName:"p"},"args[0]")," para tomar el ",Object(o.b)("inlineCode",{parentName:"p"},"string")," que se encuentre en la posici\xf3n 0."),Object(o.b)("pre",null,Object(o.b)("code",t({parentName:"pre"},{className:"language-js"}),'var sobremi = bot.registerCommand("sobremi", (msg, args) => {\n    if (!args[0]) return "Cu\xe9ntanos sobre tu vida!";\n    return args[0]\n}, {\n    aliases: ["contarvida"],\n    description: "Envia un mensaje contandonos tu vida!",\n    fullDescription: "Este comando puede usarse cuando est\xe1s aburrido.",\n    cooldown: 10,\n    cooldownExclusions: { userIDs: ["595734746059898927"] },\n    cooldownMessage: "Este comando est\xe1 en cd.",\n    usage: "Peque\xf1o texto sobre tu vida",\n    invalidUsageMessage: "Uso inv\xe1lido"\n});\n')),Object(o.b)("p",null,"Supongamos que el usuario utiliza ",Object(o.b)("inlineCode",{parentName:"p"},"!sobremi mi vida es genial"),". En este caso solo enviar\xeda el ",Object(o.b)("inlineCode",{parentName:"p"},"mi"),", ya que se encuentra en la posici\xf3n 0."),Object(o.b)("p",null,"Adem\xe1s podemos ver que en los dos ejemplos agregu\xe9 muuuuchos m\xe1s par\xe1metros de configuraci\xf3n del comando. A continuaci\xf3n los explicar\xe9."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"El par\xe1metro ",Object(o.b)("inlineCode",{parentName:"li"},"aliases")," sirve para designar aliases para tu comando. Por ejemplo, el comando ",Object(o.b)("inlineCode",{parentName:"li"},"sobremi")," tambi\xe9n podr\xeda ser utilizado como ",Object(o.b)("inlineCode",{parentName:"li"},"contarvida"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"description")," mostrar\xe1 la descripci\xf3n del comando al utilizar el ",Object(o.b)("a",t({parentName:"li"},{href:"####Comando-help"}),'"comando help"'),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"fullDescription")," mostrar\xe1 una descripci\xf3n m\xe1s detallada del comando al utilizar ",Object(o.b)("inlineCode",{parentName:"li"},"help <comando>"),"."),Object(o.b)("li",{parentName:"ul"},"Con ",Object(o.b)("inlineCode",{parentName:"li"},"cooldown")," definiremos el tiempo de espera del comando."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"cooldownExclusions")," permite definir que usuarios, servidores o canales ser\xe1n exluc\xeddos del cooldown."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"userIDs")," es un array con las ID's de usuarios que no se ver\xe1n afectados por el cooldown."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"cooldownMessage")," define el mensaje que retornar\xe1 en caso de que el usuario intente usar un comando en cooldown."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"usage")," mostrar\xe1 el uso en el comando help."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"invalidUsageMessage")," define el mensaje de retorno en caso de que el ",Object(o.b)("inlineCode",{parentName:"li"},"usage")," est\xe9 mal utilizado.")),Object(o.b)("h3",{id:"comando-help"},"Comando help"),Object(o.b)("p",null,"La clase ",Object(o.b)("inlineCode",{parentName:"p"},"CommandClient")," nos provee de un comando help predefinido. No hace falta escribir ni ",Object(o.b)("strong",{parentName:"p"},"una sola l\xednea de c\xf3digo")," para comenzar a usar este comando, simplemente tipea tu ",Object(o.b)("inlineCode",{parentName:"p"},"prefijo")," seguido de ",Object(o.b)("inlineCode",{parentName:"p"},"help"),"."),Object(o.b)("p",null,"Muchos de los par\xe1metros que especificaras mientras creas tus comandos ser\xe1n mostrados en el comando help. Por ejemplo, el par\xe1metro ",Object(o.b)("inlineCode",{parentName:"p"},"description")," mostrar\xe1 una descripci\xf3n breve del comando."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Nota:")," Si quieres desactivar este comando debes especificar ",Object(o.b)("inlineCode",{parentName:"p"},"defaultHelpCommand: false")," en los par\xe1metros de la constante ",Object(o.b)("inlineCode",{parentName:"p"},"bot"),".")),Object(o.b)("p",null,"Este como es de esperarse est\xe1 escrito en ingl\xe9s, pero modificarlo es muy sencilo."),Object(o.b)("p",null,"Debemos ingresar a nuestra carpeta ",Object(o.b)("inlineCode",{parentName:"p"},"node_modules")," y buscar el directorio de ",Object(o.b)("inlineCode",{parentName:"p"},"eris"),". Una vez dentro ingresaremos a la carpeta ",Object(o.b)("inlineCode",{parentName:"p"},"lib")," para luego ingresar al directorio ",Object(o.b)("inlineCode",{parentName:"p"},"command"),".\nUna vez hecho esto veremos un archivo llamado ",Object(o.b)("inlineCode",{parentName:"p"},"CommandClient")," el cual deberemos abrir con nuestro editor de c\xf3digo.\nAhora debemos encontrar ",Object(o.b)("inlineCode",{parentName:"p"},"if(this.commandOptions.defaultHelpCommand) {")," ",Object(o.b)("strong",{parentName:"p"},"(Puede utilizar la herrmienta Buscar/Find de su editor de c\xf3digo)")," o dirigirse a la ",Object(o.b)("inlineCode",{parentName:"p"},"l\xednea 74")," ",Object(o.b)("strong",{parentName:"p"},"(Ah\xed deber\xeda encontrarse lo que necesitamos)")," y reemplazar el contenido ",Object(o.b)("strong",{parentName:"p"},"(L\xednea 74 - 127)")," con el contenido del bloque de c\xf3digo que se anexa debajo."),Object(o.b)("pre",null,Object(o.b)("code",t({parentName:"pre"},{className:"language-js"}),'if(this.commandOptions.defaultHelpCommand) {\n    this.registerCommand("help", (msg, args) => {\n        let result = "";\n        if(args.length > 0) {\n            let cur = this.commands[this.commandAliases[args[0]] || args[0]];\n            if(!cur) {\n                return "Comando no encontrado";\n            }\n            let {label} = cur;\n            for(let i = 1; i < args.length; ++i) {\n                cur = cur.subcommands[cur.subcommandAliases[args[i]] || args[i]];\n                if(!cur) {\n                    return "Comando no encontrado";\n                }\n                label += ` ${cur.label}`;\n            }\n            result += `**${msg.prefix}${label}** ${cur.usage}\\n${cur.fullDescription}`;\n            if(cur.aliases.length > 0) {\n                result += `\\n\\n**Aliases:** ${cur.aliases.join(", ")}`;\n            }\n            const subcommands = Object.keys(cur.subcommands);\n            if(subcommands.length > 0) {\n                result += "\\n\\n**Subcomandos:**";\n                for(const subLabel of subcommands) {\n                    if(cur.subcommands.hasOwnProperty(subLabel) && cur.subcommands[subLabel].permissionCheck(msg)) {\n                        result += `\\n  **${subLabel}** - ${cur.subcommands[subLabel].description}`;\n                    }\n                }\n            }\n        } else {\n            result += `${this.commandOptions.name} - ${this.commandOptions.description}\\n`;\n            if(this.commandOptions.owner) {\n                result += `desarrollado por ${this.commandOptions.owner}\\n`;\n            }\n            result += "\\n**Comandos:**\\n";\n            for(const label in this.commands) {\n                if(this.commands.hasOwnProperty(label) && this.commands[label] && this.commands[label].permissionCheck(msg) && !this.commands[label].hidden) {\n                    result += `  **${msg.prefix}${label}** - ${this.commands[label].description}\\n`;\n                }\n            }\n            result += `\\nEscribe ${msg.prefix}help <comando> para m\xe1s informaci\xf3n sobre un comando.`;\n        }\n        return result;\n    }, {\n        description: "Este es el comando de ayuda.",\n        fullDescription: "Este comando se usa para ver informaci\xf3n de diferentes comandos de bot, incluido este."\n    });\n    if(!this.commandOptions.defaultCommandOptions.invalidUsageMessage) {\n        this.commandOptions.defaultCommandOptions.invalidUsageMessage = "Invalid usage. Do `%prefix%help %label%` to view proper usage.";\n    }\n} else if(!this.commandOptions.defaultCommandOptions.invalidUsageMessage) {\n    this.commandOptions.defaultCommandOptions.invalidUsageMessage = "Invalid usage.";\n}\n}\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Nota:")," Lo que no est\xe9 traducido es porque puede modificarse mediante par\xe1metros al definir ",Object(o.b)("inlineCode",{parentName:"p"},"CommandClient"),".")),Object(o.b)("h3",{id:"sub-comandos"},"Sub comandos"),Object(o.b)("p",null,"Esta clase act\xfaa como un registro de comando normal, solamente cambiar\xe1 el hecho de que deber\xe1 ser utilizado como un ",Object(o.b)("inlineCode",{parentName:"p"},"subcomando"),". (Ej: ",Object(o.b)("em",{parentName:"p"},"!comando subcomando"),")\nTomemos el ejemplo del comando ",Object(o.b)("a",t({parentName:"p"},{href:"###utilizando-argumentos"}),'"sobremi"')," y especifiquemos que si el ",Object(o.b)("inlineCode",{parentName:"p"},"subcomando")," es ",Object(o.b)("inlineCode",{parentName:"p"},"pais")," retorne el pa\xeds especificado en los argumentos."),Object(o.b)("pre",null,Object(o.b)("code",t({parentName:"pre"},{className:"language-js"}),'sobremi.registerSubcommand("pais", (msg, args) => {\n  if (args[0]) return "Cu\xe1l es tu pa\xeds de or\xedgen?";\n  return args[0]\n}, {\n  aliases: ["mipais"],\n  description: "Cuentas tu pa\xeds",\n  fullDescription: "Este comando puede usarse cuando est\xe1s aburrido.",\n  cooldown: 10,\n  cooldownExclusions: { userIDs: ["595734746059898927"] },\n  cooldownMessage: "Este comando est\xe1 en cd.",\n  usage: "Muestranos tu pa\xeds",\n  invalidUsageMessage: "Uso inv\xe1lido"\n});\n')),Object(o.b)("p",null,"Entonces con ",Object(o.b)("inlineCode",{parentName:"p"},"sobremi.registerSubcommand()")," estamos registrando un sub comando al comando ",Object(o.b)("inlineCode",{parentName:"p"},"sobremi"),". Al utilizar ",Object(o.b)("inlineCode",{parentName:"p"},"!sobremi pais Argentina")," el bot, como es de esperar enviar\xeda ",Object(o.b)("inlineCode",{parentName:"p"},"Argentina")," al chat."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"Atenci\xf3n!")," Esta es una versi\xf3n primitiva de la gu\xeda sobre ",Object(o.b)("em",{parentName:"p"},"Eris"),". Seguiremos actualizandola con m\xe1s contenido.")))}c.isMDXComponent=!0},221:function(e,n,a){"use strict";a.d(n,"a",(function(){return s})),a.d(n,"b",(function(){return m}));var o=a(0),t=a.n(o),r=t.a.createContext({}),i=function(e){var n=t.a.useContext(r),a=n;return e&&(a="function"==typeof e?e(n):Object.assign({},n,e)),a},s=function(e){var n=i(e.components);return t.a.createElement(r.Provider,{value:n},e.children)};var l="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.a.createElement(t.a.Fragment,{},n)}},d=Object(o.forwardRef)((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,l=function(e,n){var a={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&-1===n.indexOf(o)&&(a[o]=e[o]);return a}(e,["components","mdxType","originalType","parentName"]),d=i(a),m=o,u=d[s+"."+m]||d[m]||c[m]||r;return a?t.a.createElement(u,Object.assign({},{ref:n},l,{components:a})):t.a.createElement(u,Object.assign({},{ref:n},l))}));function m(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[l]="string"==typeof e?e:o,i[1]=s;for(var m=2;m<r;m++)i[m]=a[m];return t.a.createElement.apply(null,i)}return t.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);