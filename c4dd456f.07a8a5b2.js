(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{197:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return i})),n.d(a,"rightToc",(function(){return o})),n.d(a,"default",(function(){return b}));n(51),n(24),n(19),n(20),n(52),n(0);var t=n(221);function r(){return(r=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}var i={id:"djl-2",title:"Primeros pasos",sidebar_label:"Primeros pasos"},o=[{value:"Introducci\xf3n",id:"introducci\xf3n",children:[{value:"Requisitos",id:"requisitos",children:[]}]},{value:"Primer bot",id:"primer-bot",children:[]}],l={rightToc:o},c="wrapper";function b(e){var a=e.components,n=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(t.b)(c,r({},l,n,{components:a,mdxType:"MDXLayout"}),Object(t.b)("h1",{id:"\xedndice"},"\xcdndice"),Object(t.b)("h2",{id:"introducci\xf3n"},"Introducci\xf3n"),Object(t.b)("p",null,Object(t.b)("strong",{parentName:"p"},Object(t.b)("a",r({parentName:"strong"},{href:"https://posts.xh4h.com/Discord.jl/dev/"}),"discord.jl"))," es la soluci\xf3n para desarrollar bots con el lenguaje de programaci\xf3n ",Object(t.b)("strong",{parentName:"p"},Object(t.b)("a",r({parentName:"strong"},{href:"https://julialang.org/"}),"Julia")),"."),Object(t.b)("h3",{id:"requisitos"},"Requisitos"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("a",r({parentName:"li"},{href:"https://julialang.org/downloads/"}),"Julia"))),Object(t.b)("h4",{id:"julia"},"Julia"),Object(t.b)("p",null,Object(t.b)("inlineCode",{parentName:"p"},"Julia")," es un lenguaje de programaci\xf3n homoic\xf3nico, multiplataforma y multiparadigma de tipado din\xe1mico de alto nivel y alto desempe\xf1o para la computaci\xf3n gen\xe9rica, t\xe9cnica y cient\xedfica, con una sintaxis similar a la de otros entornos de computaci\xf3n similares."),Object(t.b)("p",null,"Para corroborar que ",Object(t.b)("inlineCode",{parentName:"p"},"Julia")," est\xe1 instalado correctamente escribiremos en una consola ",Object(t.b)("inlineCode",{parentName:"p"},"julia --ver")),Object(t.b)("h4",{id:"instalaci\xf3n"},"Instalaci\xf3n"),Object(t.b)("p",null,"Para empezar a desarrollar su bot necesitar\xe1 crear un carpeta donde se ubicar\xe1n todos sus archivos."),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},Object(t.b)("strong",{parentName:"li"},"Windows:")," Luego abra un ",Object(t.b)("inlineCode",{parentName:"li"},"cmd"),' (Win + R y escriba "cmd" en ejecutar) y abrir\xe1 la ruta donde se encuentra la carpeta con el comando ',Object(t.b)("inlineCode",{parentName:"li"},"cd"),", ejemplo:",Object(t.b)("pre",{parentName:"li"},Object(t.b)("code",r({parentName:"pre"},{className:"language-bash"}),"cd desktop/bot\n"))),Object(t.b)("li",{parentName:"ul"},Object(t.b)("strong",{parentName:"li"},"Linux:")," Luego de esto, deber\xe1 abrir la ",Object(t.b)("inlineCode",{parentName:"li"},"terminal")," (Aplicaciones\xbbAccesorios\xbbTerminal) y abrir\xe1 la ruta donde se encuentra la carpeta con el comando ",Object(t.b)("inlineCode",{parentName:"li"},"cd"),", ejemplo:",Object(t.b)("pre",{parentName:"li"},Object(t.b)("code",r({parentName:"pre"},{className:"language-bash"}),"cd desktop/bot\n")))),Object(t.b)("p",null,"En la misma consola que hemos abierto tipearemos ",Object(t.b)("inlineCode",{parentName:"p"},"julia")," para abrir el ",Object(t.b)("inlineCode",{parentName:"p"},"REPL"),"."),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-bash"}),"julia #Abrir\xe1 el REPL.\n")),Object(t.b)("p",null,"Luego entraremos al modo ",Object(t.b)("inlineCode",{parentName:"p"},"pkg")," escribiendo ",Object(t.b)("inlineCode",{parentName:"p"},"]"),"."),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-bash"}),"julia> ]\n")),Object(t.b)("p",null,"Una vez estemos situados en el pkg, debemos a\xf1adir la librer\xeda escribiendo lo siguiente:"),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-bash"}),"pkg> add https://github.com/Xh4H/Discord.jl\n")),Object(t.b)("p",null,"Esto comenzar\xe1 a instalar ",Object(t.b)("inlineCode",{parentName:"p"},"discord.jl")," en su directorio. Si no hubo ning\xfan mensaje de error al finalizar la instalaci\xf3n, es hora de programar su bot."),Object(t.b)("h2",{id:"primer-bot"},"Primer bot"),Object(t.b)("p",null,"Con todo instalado estamos listos para comenzar a utilizar ",Object(t.b)("inlineCode",{parentName:"p"},"discord.jl"),". Esta secci\xf3n cubrir\xe1 lo b\xe1sico para iniciarse en la librer\xeda. Abarcaremos conceptos simples, algunos eventos y ejemplos de uso."),Object(t.b)("p",null,"Primero debemos crear un archivo con extensi\xf3n ",Object(t.b)("inlineCode",{parentName:"p"},".jl")," (Ej: ",Object(t.b)("inlineCode",{parentName:"p"},"MiBot.jl"),") y abrirlo con nuestro editor de c\xf3digo de preferencia."),Object(t.b)("p",null,"Luego debemos importar ",Object(t.b)("inlineCode",{parentName:"p"},"discord.jl")," en nuestro archivo de la siguiente manera:"),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-julia"}),"using Discord\n")),Object(t.b)("blockquote",null,Object(t.b)("p",{parentName:"blockquote"},Object(t.b)("strong",{parentName:"p"},"Nota:")," Tambi\xe9n puede importar ",Object(t.b)("strong",{parentName:"p"},"Discord.jl")," mediante ",Object(t.b)("inlineCode",{parentName:"p"},"import"),", pero en esta gu\xeda utilizaremos la manera definida arriba.")),Object(t.b)("h4",{id:"discord-client"},"Discord Client"),Object(t.b)("p",null,"El cliente es el principal punto de interacci\xf3n de ",Object(t.b)("inlineCode",{parentName:"p"},"discord.jl")," con la API de discord. Debemos definirlo de la siguiente manera:"),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-julia"}),'c = Client("token"; presence=(game=(name="Julia", type=AT_GAME),))\n')),Object(t.b)("p",null,"En ese ejemplo definimos el cliente a\xf1adiendole el ",Object(t.b)("inlineCode",{parentName:"p"},"token")," de tu ",Object(t.b)("inlineCode",{parentName:"p"},"bot")," como par\xe1metro. Adicionalmente agregamos un par\xe1metro que cambiar\xe1 la presencia de nuestro bot a ",Object(t.b)("inlineCode",{parentName:"p"},"Jugando a Julia"),"."),Object(t.b)("p",null,"Para comprobar que todo ha salido bien definiremos el evento ",Object(t.b)("inlineCode",{parentName:"p"},"Ready")," que se emite cuando nuestro bot se pone en l\xednea."),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-julia"}),'handler(::Client, e::Ready) = println("Estoy en l\xednea!")\nadd_handler!(c, Ready, handler)\n')),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"Con ",Object(t.b)("inlineCode",{parentName:"li"},"handler()")," definimos nuestro evento ",Object(t.b)("inlineCode",{parentName:"li"},"ready"),". Dentro de \xe9l van los par\xe1metros para el mismo."),Object(t.b)("li",{parentName:"ul"},"Con ",Object(t.b)("inlineCode",{parentName:"li"},"add_handler!()")," a\xf1adimos el handler para ser interpretado por ",Object(t.b)("inlineCode",{parentName:"li"},"discord.jl"),".")),Object(t.b)("blockquote",null,Object(t.b)("p",{parentName:"blockquote"},Object(t.b)("strong",{parentName:"p"},"Nota:")," Puede ver todos los par\xe1metros para ",Object(t.b)("inlineCode",{parentName:"p"},"add_handler!()")," ",Object(t.b)("a",r({parentName:"p"},{href:"https://posts.xh4h.com/Discord.jl/dev/client/#Event-Handlers-1"}),"aqu\xed"),".")),Object(t.b)("p",null,"Si en la consola se imprime ",Object(t.b)("inlineCode",{parentName:"p"},"Estoy en l\xednea!"),", todo sali\xf3 perfecto."),Object(t.b)("h4",{id:"mensajes"},"Mensajes"),Object(t.b)("p",null,"Ahora que nuestro bot est\xe1 en l\xednea comprobaremos su funcionamiento haciendo que reciba y envie mensajes. Para ellos tenemos que definir el evento ",Object(t.b)("inlineCode",{parentName:"p"},"MessageCreate")," que se emite siempre que se envie un mensaje."),Object(t.b)("pre",null,Object(t.b)("code",r({parentName:"pre"},{className:"language-julia"}),'function handler(c::Client, e::MessageCreate)\n  if e.content == "ping"\n    reply(c, m, "Pong!")\nend\n')))}b.isMDXComponent=!0},221:function(e,a,n){"use strict";n.d(a,"a",(function(){return l})),n.d(a,"b",(function(){return s}));var t=n(0),r=n.n(t),i=r.a.createContext({}),o=function(e){var a=r.a.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):Object.assign({},a,e)),n},l=function(e){var a=o(e.components);return r.a.createElement(i.Provider,{value:a},e.children)};var c="mdxType",b={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},p=Object(t.forwardRef)((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,l=e.parentName,c=function(e,a){var n={};for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&-1===a.indexOf(t)&&(n[t]=e[t]);return n}(e,["components","mdxType","originalType","parentName"]),p=o(n),s=t,d=p[l+"."+s]||p[s]||b[s]||i;return n?r.a.createElement(d,Object.assign({},{ref:a},c,{components:n})):r.a.createElement(d,Object.assign({},{ref:a},c))}));function s(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var b in a)hasOwnProperty.call(a,b)&&(l[b]=a[b]);l.originalType=e,l[c]="string"==typeof e?e:t,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);